#!/usr/bin/env ruby
#
require "front_matter"
require 'optparse'
require 'awesome_print'

def parse_opt()
  options = {}

  # optparse definition
  optparse = OptionParser.new do |opts|
     opts.on("-u", "--[no-]unindent", "unindent white space") do |v|
      options[:unindent] = v
    end
     opts.on("-y", "--[no-]yaml", "formet output string as yaml") do |v|
      options[:as_yaml] = v
    end
    opts.on('-h', '--help', 'Help Message') do
      puts opts
      exit
    end
  end

  # parse and check mandatory options
  begin
    optparse.parse!
    mandatory = []
    missing = mandatory.select{ |param| options[param].nil? }
    if not missing.empty?
      puts "Missing options: #{missing.join(', ')}"
      puts optparse
      exit
    end
  rescue OptionParser::InvalidOption, OptionParser::MissingArgument
    puts $!.to_s
    puts optparse
    exit
  end

  return options
end





options = parse_opt()
fm = FrontMatter.new(options)

ARGV.each do |f|
  if File.readable?(f)
    content = fm.extract_file(f)
    ap content
  else
    puts "File: #{f} is not readable!"
  end
end
